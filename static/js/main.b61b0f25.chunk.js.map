{"version":3,"sources":["logo.svg","components/home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","questions","setQuestions","page","selItem","setSelItem","show","setShow","handleClose","useEffect","console","log","url","axios","get","then","res","data","loadData","striped","bordered","hover","items","map","item","onClick","title","showItem","style","cursor","owner","display_name","date","creation_date","question_id","Modal","onHide","Header","closeButton","Title","Body","href","link","target","Footer","Button","variant","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAe,I,sFC2FAA,EArFF,WAAO,IAAD,EACiBC,mBAAS,IAD1B,mBACVC,EADU,KACCC,EADD,OAEOF,mBAAS,GAFhB,mBAEVG,EAFU,aAGaH,mBAAS,OAHtB,mBAGVI,EAHU,KAGDC,EAHC,OAKOL,oBAAS,GALhB,mBAKVM,EALU,KAKJC,EALI,KAOXC,EAAc,kBAAMD,GAAQ,IAalCE,qBAAU,WACRC,QAAQC,IAAI,eAZG,WACf,IAAMC,EACJ,0DACAT,EACA,2DACFU,IAAMC,IAAIF,GAAKG,MAAK,SAACC,GACnBN,QAAQC,IAAI,uBAAwBK,GACpCd,EAAac,EAAIC,SAMnBC,KACC,IAQH,OAEE,gCAEE,eAAC,IAAD,CAASC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA/B,UACE,gCACE,+BACE,wCACA,uCACA,oDAGJ,gCACGpB,EAAUqB,MACTrB,EAAUqB,MAAMC,KAAI,SAACC,GACnB,OACE,qBACEC,QAAS,kBAvBR,SAACD,GAChBd,QAAQC,IAAI,iBAAkBa,EAAKE,OACnCrB,EAAWmB,GACXjB,GAAQ,GAoBqBoB,CAASH,IACxBI,MAAO,CAAEC,OAAQ,WAFnB,UAKE,6BAAKL,EAAKM,MAAMC,eAChB,6BAAKP,EAAKE,QACV,6BACE,cAAC,IAAD,CAAQM,KAA2B,IAArBR,EAAKS,oBALhBT,EAAKU,gBAWhB,kCAIL5B,EACC,eAAC6B,EAAA,EAAD,CAAO7B,KAAMA,EAAM8B,OAAQ5B,EAA3B,UACE,cAAC2B,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACE,cAACH,EAAA,EAAMI,MAAP,UAAcnC,EAAQsB,UAExB,cAACS,EAAA,EAAMK,KAAP,UAAY,mBAAGC,KAAMrC,EAAQsC,KAAMC,OAAO,SAA9B,+BACZ,cAACR,EAAA,EAAMS,OAAP,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUrB,QAASjB,EAAnC,wBAMJ,iCCxEOuC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpC,MAAK,YAAkD,IAA/CqC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b61b0f25.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect, useState } from \"react\";\r\nimport { Table as RBTable, Modal, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport Moment from \"react-moment\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nconst Home = () => {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [selItem, setSelItem] = useState(null)\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const loadData = () => {\r\n    const url =\r\n      \"https://api.stackexchange.com/2.2/search/advanced?page=\" +\r\n      page +\r\n      \"&pagesize=20&order=desc&sort=activity&site=stackoverflow\";\r\n    axios.get(url).then((res) => {\r\n      console.log(\"received response ->\", res);\r\n      setQuestions(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"use effect \");\r\n    loadData();\r\n  }, []);\r\n\r\n  const showItem = (item) => {\r\n    console.log(\"selected item \", item.title);\r\n    setSelItem(item)\r\n    setShow(true);\r\n  };\r\n\r\n  return (\r\n    \r\n    <div>\r\n  \r\n      <RBTable striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Author</th>\r\n            <th>Title</th>\r\n            <th>Creation Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {questions.items ? (\r\n            questions.items.map((item) => {\r\n              return (\r\n                <tr\r\n                  onClick={() => showItem(item)}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  key={item.question_id}\r\n                >\r\n                  <td>{item.owner.display_name}</td>\r\n                  <td>{item.title}</td>\r\n                  <td>\r\n                    <Moment date={item.creation_date * 1000}></Moment>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </tbody>\r\n      </RBTable>\r\n      {show ? (\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selItem.title}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body><a href={selItem.link} target=\"_blank\">Open in new tab</a></Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"primary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport Home from './components/home'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home></Home>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}